#!/usr/bin/env python

import subprocess
import os
from os import sys, path
from إجراء_الاختبارات import test_all


__dirname__ = path.abspath(path.dirname(__file__))


def print_section_title(title):
    l = "    ------------------------------------------------"
    align_spaces = ((len(l) - 4 - len(title)) >> 1)
    align_spaces = max([align_spaces, 0]) * " "
    print(l)
    print("    " + align_spaces + title)
    print(l)


def activate_and_do(*cmds):
    # TODO(platforms): use platform specific activation and "&&"
    activate = "source ./venv/bin/activate"
    rc = subprocess.run(f"{activate} && {' && '.join(cmds)}", shell=True).returncode
    return rc


def create_venv():
    print_section_title("📦 إنشاء بيئة افتراضية لتشغيل أكواد بايثون ...")
    os.chdir(__dirname__)
    requirements = path.join(__dirname__, "./متطلبات")

    if not path.exists(requirements):
        print("لا يوجد ملف المتطلبات\n", file=sys.stderr)
        exit(1)

    rc = subprocess.run("python -m venv venv", shell=True).returncode  # TODO(platforms)
    if not rc:
        rc = activate_and_do(f"python -m pip install -r {requirements}")
        if rc:
            print("حدث خطأ عند محاولة تنصيب الحزم من ملف ./متطلبات\n",
                  file=sys.stderr)
            exit(rc)
    else:
        print("حدث خطأ عند محاولة إنشاء بيئة افتراضية لبايثون\n", file=sys.stderr)
        exit(rc)


def build_alif():
    print_section_title("🚀 جاري بناء مترجم ألف ...")
    # TODO(platforms): check privileges
    if os.environ.get("USER") != "root":
        print("يجب تشغيل هذا الأمر بصلاحيات المستخدم الجذر، استخدم `sudo`\n",
              file=sys.stderr)
        exit(1)
    build_dir = path.join(__dirname__, "../build")
    if not path.exists(build_dir):
        subprocess.run(f'mkdir -p "{build_dir}"', shell=True)
    os.chdir(build_dir)
    # TODO(platforms): different build commands in different platforms platforms
    rc = subprocess.run("cmake .. && make && sudo make install", shell=True).returncode
    if rc:
        print("لم يتم البناء بنجاح ]':", file=sys.stderr)
        exit(rc)


if __name__ == "__main__":
    os.chdir(__dirname__)
    if not path.exists("./venv"):
        create_venv()
    try:
        i = sys.argv.index("--ابن-ألف")
        del sys.argv[i:i+1]
        build_alif()
    except: pass
    print_section_title("🔍 إجراء الاختبارات ...")
    test_all()
